name: Build Test
on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { rosdistro: "melodic", container: "ros:melodic-ros-base-bionic" }
          - { rosdistro: "noetic", container: "ros:noetic-ros-base-focal" }
    container: ${{ matrix.config.container }}
    steps:
      - uses: actions/checkout@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install catkin-tools on melodic
        if: ${{ matrix.config.container == 'ros:melodic-ros-base-bionic' }}
        run: |
          apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
          apt update && apt install -y python3-vcstool python-catkin-tools
      - name: Install catkin-tools on Noetic
        if: ${{ matrix.config.container == 'ros:noetic-ros-base-focal' }}
        run: |
          apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
          apt update && apt install -y python3-pip
          apt update && apt install -y python3-vcstool python3-osrf-pycommon python3-catkin-tools
      - name: release_build_test
        working-directory:
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt update
          apt install -y python3-vcstool autoconf libtool git
          mkdir -p $HOME/catkin_ws/src;
          cd $HOME/catkin_ws
          catkin init
          catkin config --extend "/opt/ros/${{matrix.config.rosdistro}}"
          catkin config --merge-devel
          cd $HOME/catkin_ws/src
          ln -s $GITHUB_WORKSPACE
          cd $HOME/catkin_ws
          vcs import --recursive src/ < src/xwr_data/ti_mmwave.repos
          rosdep update
          rosdep install --from-paths src --ignore-src -y --rosdistro ${{matrix.config.rosdistro}}
          catkin config --cmake-args -DCMAKE_BUILD_TYPE=Release
          catkin build -j$(nproc) -l$(nproc) xwr_data
        shell: bash
